[{"/Users/naimish/Sites/react-projects/react-covid/src/App.js":"1","/Users/naimish/Sites/react-projects/react-covid/src/components/Nav.js":"2","/Users/naimish/Sites/react-projects/react-covid/src/index.js":"3","/Users/naimish/Sites/react-projects/react-covid/src/components/Map.js":"4","/Users/naimish/Sites/react-projects/react-covid/src/components/TopCountries.js":"5","/Users/naimish/Sites/react-projects/react-covid/src/context.js":"6"},{"size":321,"mtime":1606371772713,"results":"7","hashOfConfig":"8"},{"size":696,"mtime":1606372363367,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1606372038267,"results":"10","hashOfConfig":"8"},{"size":1988,"mtime":1606433484223,"results":"11","hashOfConfig":"8"},{"size":2302,"mtime":1606383165392,"results":"12","hashOfConfig":"8"},{"size":862,"mtime":1606383287893,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wz7m33",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/naimish/Sites/react-projects/react-covid/src/App.js",["28"],"/Users/naimish/Sites/react-projects/react-covid/src/components/Nav.js",["29","30","31","32"],"import React from \"react\";\nimport logo from \"../logo.svg\";\n\nconst Nav = () => {\n  return (\n    <div className=\"header\">\n      <nav className=\"nav\">\n        <div className=\"app-logo\">\n          <a href=\"/\">\n            <img src={logo} alt=\"logo\" />\n          </a>\n        </div>\n        <div className=\"rlink\">\n          <ul>\n            <li>\n              <a href=\"\">Home</a>\n            </li>\n            <li>\n              <a href=\"\">Countries</a>\n            </li>\n            <li>\n              <a href=\"\">History</a>\n            </li>\n            <li>\n              <a href=\"\">Contact</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;\n","/Users/naimish/Sites/react-projects/react-covid/src/index.js",[],"/Users/naimish/Sites/react-projects/react-covid/src/components/Map.js",[],"/Users/naimish/Sites/react-projects/react-covid/src/components/TopCountries.js",["33"],"import React from \"react\";\nimport _ from \"lodash\";\nimport { useGlobalContext } from \"../context\";\nconst TopCountries = () => {\n  const {\n    countries,\n    searchTerm,\n    sortBy,\n    setSearchTerm,\n    setSortBy,\n  } = useGlobalContext();\n\n  let result = !searchTerm\n    ? countries\n    : countries.filter((customer) =>\n        customer.country.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n      );\n\n  if (sortBy !== \"\") {\n    switch (sortBy) {\n      case \"asc\":\n        result = _.orderBy(result, [\"country\"], [\"asc\"]);\n        console.log(result);\n        break;\n      case \"desc\":\n        result = _.orderBy(result, [\"country\"], [\"desc\"]);\n        break;\n      case \"covid\":\n        result = _.orderBy(result, [\"cases\"], [\"desc\"]);\n        break;\n      case \"daily\":\n        result = _.orderBy(result, [\"todayCases\"], [\"desc\"]);\n        break;\n      default:\n        result = result;\n    }\n  }\n  return (\n    <section>\n      <input\n        type=\"text\"\n        placeholder=\"search country ...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <select className=\"sort\" onChange={(e) => setSortBy(e.target.value)}>\n        <option value=\"\"></option>\n        <option value=\"asc\">By ASC</option>\n        <option value=\"desc\">By Desc</option>\n        <option value=\"covid\">By Most cases</option>\n        <option value=\"daily\">By Daily cases</option>\n      </select>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Country Name</th>\n            <th>Total Cases</th>\n            <th>Active Cases</th>\n            <th>Recovered</th>\n            <th>Total Tests</th>\n            <th>Cases Today</th>\n            <th>Deaths Today</th>\n          </tr>\n        </thead>\n        <tbody>\n          {result.map((country, index) => {\n            return (\n              <tr key={index}>\n                <td>{country.country}</td>\n                <td>{country.cases}</td>\n                <td>{country.recovered}</td>\n                <td>{country.active}</td>\n                <td>{country.tests}</td>\n                <td>{country.todayCases}</td>\n                <td>{country.todayDeaths}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default TopCountries;\n","/Users/naimish/Sites/react-projects/react-covid/src/context.js",[],{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"39","line":16,"column":15,"nodeType":"40","endLine":16,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":19,"column":15,"nodeType":"40","endLine":19,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":22,"column":15,"nodeType":"40","endLine":22,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":25,"column":15,"nodeType":"40","endLine":25,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":35,"column":18,"nodeType":"36","messageId":"43","endLine":35,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-self-assign","'result' is assigned to itself.","selfAssignment"]